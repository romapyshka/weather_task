{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","weather","setWeather","useEffect","city","a","Promise","fetch","then","res","json","data","getData","console","log","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGMA,EACG,mCADHA,EAEI,2CAkDKC,MAxCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,gCAEmBA,mBAAS,KAF5B,mBAEJC,EAFI,KAEKC,EAFL,KAiCX,OAhBAC,qBAAU,WAAM,4CACd,WAAuBC,GAAvB,SAAAC,EAAA,+EACS,IAAIC,SAAQ,WACjBC,MAAM,GAAD,OAAIT,EAAJ,qBAAyBM,EAAzB,kBAAuCN,IACvCU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJT,EAAWS,UALrB,4CADc,uBAAC,SAAD,2BAUdC,CAAQ,cAEP,IAEHC,QAAQC,IAAIb,GAGR,qBAAKc,UAAU,MAAf,SACI,mDCtCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.98d3efc9.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nconst api = {\n    key: \"c14d884c9ad0731105aa7fcf29448963\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\n// navigator.geolocation.getCurrentPosition(\n//     (position) => {\n//       console.log('latitude is: ', position.coords.latitude);\n//       console.log('longitude is: ', position.coords.longitude);\n//     }\n// );\n\nfunction App() {\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n\n\n    // const Data = fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\n    //     .then(res => res.json())\n    //     .then(result => setWeather(result));\n\n\n    // const getWeather = async () => {\n    //     const api_call = await Promise.all( () => {fetch(`${api.base}weather?q=Uzhgorod&appid=${api.key}`)});\n    //     const data = await api_call.json();\n    // };\n\n\n\n    useEffect(() => {\n      async function getData(city) {\n        return new Promise(() => {\n          fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\n              .then(res => res.json())\n              .then(data => {\n                setWeather(data);\n              })\n        });\n      }\n      getData('Uzhgorod');\n\n    }, []);\n\n    console.log(weather);\n\n    return (\n        <div className=\"App\">\n            <h2> Welcome user!</h2>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}